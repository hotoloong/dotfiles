[[plugins]]
repo = 'rhysd/git-messenger.vim'
hook_add = '''
let g:git_messenger_no_default_mappings = v:true
nmap ,gm <Plug>(git-messenger)
'''

# ほかん
[[plugins]]
repo = 'cohama/lexima.vim'

# snippet
[[plugins]]
repo = 'honza/vim-snippets'
depends = ['ultisnips']

[[plugins]]
repo = 'prabirshrestha/asyncomplete-ultisnips.vim'
depends = ['asyncomplete', 'ultisnips']

# ruby rails
[[plugins]]
repo = 'vim-ruby/vim-ruby'
on_ft = ['ruby']

[[plugins]]
repo = 'tpope/vim-rails'
on_ft = ['ruby']

[[plugins]]
repo = 'slim-template/vim-slim'
on_ft = ['eruby']

# markdown
[[plugins]]
repo = 'mattn/vim-maketable'

# html
[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html']

[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html']

# vue
[[plugins]]
repo = 'posva/vim-vue'
on_ft = ['vue']

# node
[[plugins]]
repo = 'moll/vim-node'

[[plugins]]
repo = 'mattn/jscomplete-vim'
on_ft = ['javascript']
hook_source = '''
autocmd FileType javascript setlocal omnifunc=jscomplete#CompleteJS
'''

[[plugins]]
repo = 'myhere/vim-nodejs-complete'
on_ft = ['javascript']
hook_source = '''
" myhere/vim-nodejs-complete {{{
autocmd FileType javascript setlocal omnifunc=nodejscomplete#CompleteJS
if !exists('g:neocomplcache_omni_functions')
  let g:neocomplcache_omni_functions = {}
endif
let g:neocomplcache_omni_functions.javascript = 'nodejscomplete#CompleteJS'

let g:node_usejscomplete = 1
" }}}
'''

[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript']

[[plugins]]
repo = 'dag/vim-fish'
n_ft = ['fish']

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

# reference
[[plugins]]
repo = 'rizzatti/dash.vim'
hook_post_source = '''
nmap <silent> <leader>d <Plug>DashSearch
'''

[[plugins]]
repo = 'yuezk/vim-js'
on_ft = ['javascript', 'javascript.jsx']

[[plugins]]
repo = 'AndrewRadev/switch.vim'
hook_add = '''
nnoremap <silent><C-c> :<C-u>Switch<CR>
autocmd FileType eruby let b:switch_custom_definitions =
    \ [
    \   {
    \     ':\(\k\+\)\s\+=>': '\1:',
    \     '\<\(\k\+\):':     ':\1 =>',
    \   },
    \ ]
" }}}
'''

# asyncomplete sources
[[plugins]]
repo = 'high-moctane/asyncomplete-nextword.vim'
depends = ['asyncomplete']
hook_post_source = '''
call asyncomplete#register_source(asyncomplete#sources#nextword#get_source_options({
  \   'name': 'nextword',
  \   'whitelist': ['*'],
  \   'args': ['-n', '20'],
  \   'completor': function('asyncomplete#sources#nextword#completor')
  \   }))
'''

[[plugins]]
repo = 'hotoolong/asyncomplete-tabnine.vim'
build = './install.sh'
depends = ['asyncomplete']
hook_post_source = '''
call asyncomplete#register_source(asyncomplete#sources#tabnine#get_source_options({
  \ 'name': 'tabnine',
  \ 'allowlist': ['*'],
  \ 'completor': function('asyncomplete#sources#tabnine#completor'),
  \ 'config': {
  \   'line_limit': 1000,
  \   'max_num_result': 20,
  \  },
  \ })) 
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-tags.vim'
if = '''!executable('ctags')'''
hook_post_source = '''
au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#tags#get_source_options({
    \ 'name': 'tags',
    \ 'whitelist': ['c', 'ruby'],
    \ 'completor': function('asyncomplete#sources#tags#completor'),
    \ 'config': {
    \    'max_file_size': 50000000,
    \  },
    \ }))
'''
